{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Inventory = () => {\n//     const [products, setProducts] = useState([]);\n//     const [name, setName] = useState('');\n//     const [quantity, setQuantity] = useState(0);\n//     const [editingProductId, setEditingProductId] = useState(null);\n\n//     useEffect(() => {\n//         fetchProducts();\n//     }, []);\n\n//     const fetchProducts = async () => {\n//         try {\n//             const res = await axios.get('/api/products');\n//             setProducts(res.data);\n//         } catch (error) {\n//             console.error('Error fetching products:', error);\n//         }\n//     };\n\n//     const addProduct = async () => {\n//         try {\n//             const product = { name, quantity };\n//             const res = await axios.post('/api/products', product);\n//             setProducts([...products, res.data]);\n//             resetForm();\n//         } catch (error) {\n//             console.error('Error adding product:', error);\n//         }\n//     };\n\n//     const updateProduct = async (id) => {\n//         try {\n//             const product = { name, quantity };\n//             await axios.put(`/api/products/${id}`, product);\n//             fetchProducts();\n//             resetForm();\n//         } catch (error) {\n//             console.error('Error updating product:', error);\n//         }\n//     };\n\n//     const increaseQuantity = async (id) => {\n//         try {\n//             await axios.patch(`/api/products/${id}/increase`);\n//             fetchProducts();\n//         } catch (error) {\n//             console.error('Error increasing quantity:', error);\n//         }\n//     };\n\n//     const decreaseQuantity = async (id) => {\n//         try {\n//             await axios.patch(`/api/products/${id}/decrease`);\n//             fetchProducts();\n//         } catch (error) {\n//             console.error('Error decreasing quantity:', error);\n//         }\n//     };\n\n//     const deleteProduct = async (id) => {\n//         try {\n//             await axios.delete(`/api/products/${id}`);\n//             setProducts(products.filter(product => product._id !== id));\n//         } catch (error) {\n//             console.error('Error deleting product:', error);\n//         }\n//     };\n\n//     const editProduct = (product) => {\n//         setName(product.name);\n//         setQuantity(product.quantity);\n//         setEditingProductId(product._id);\n//     };\n\n//     const resetForm = () => {\n//         setName('');\n//         setQuantity(0);\n//         setEditingProductId(null);\n//     };\n\n//     const handleSave = () => {\n//         if (editingProductId) {\n//             updateProduct(editingProductId);\n//         } else {\n//             addProduct();\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Inventory Management System</h1>\n//             <input\n//                 type=\"text\"\n//                 placeholder=\"Product Name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//             />\n//             <input\n//                 type=\"number\"\n//                 placeholder=\"Quantity\"\n//                 value={quantity}\n//                 onChange={(e) => setQuantity(Number(e.target.value))}\n//             />\n//             <button onClick={handleSave}>\n//                 {editingProductId ? 'Update Product' : 'Add Product'}\n//             </button>\n//             <button onClick={resetForm}>Reset</button>\n//             <button onClick={fetchProducts}>Refresh</button>\n//             <h2>Products</h2>\n//             <ul>\n//                 {products.map(product => (\n//                     <li key={product._id}>\n//                         {product.name}: {product.quantity}\n//                         <button onClick={() => increaseQuantity(product._id)}>Increase</button>\n//                         <button onClick={() => decreaseQuantity(product._id)}>Decrease</button>\n//                         <button onClick={() => editProduct(product)}>Edit</button>\n//                         <button onClick={() => deleteProduct(product._id)}>Delete</button>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default Inventory;","map":{"version":3,"names":[],"sources":["D:/CTD-LABS-App/frontend/src/components/Inventory.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Inventory = () => {\r\n//     const [products, setProducts] = useState([]);\r\n//     const [name, setName] = useState('');\r\n//     const [quantity, setQuantity] = useState(0);\r\n//     const [editingProductId, setEditingProductId] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         fetchProducts();\r\n//     }, []);\r\n\r\n//     const fetchProducts = async () => {\r\n//         try {\r\n//             const res = await axios.get('/api/products');\r\n//             setProducts(res.data);\r\n//         } catch (error) {\r\n//             console.error('Error fetching products:', error);\r\n//         }\r\n//     };\r\n\r\n//     const addProduct = async () => {\r\n//         try {\r\n//             const product = { name, quantity };\r\n//             const res = await axios.post('/api/products', product);\r\n//             setProducts([...products, res.data]);\r\n//             resetForm();\r\n//         } catch (error) {\r\n//             console.error('Error adding product:', error);\r\n//         }\r\n//     };\r\n\r\n//     const updateProduct = async (id) => {\r\n//         try {\r\n//             const product = { name, quantity };\r\n//             await axios.put(`/api/products/${id}`, product);\r\n//             fetchProducts();\r\n//             resetForm();\r\n//         } catch (error) {\r\n//             console.error('Error updating product:', error);\r\n//         }\r\n//     };\r\n\r\n//     const increaseQuantity = async (id) => {\r\n//         try {\r\n//             await axios.patch(`/api/products/${id}/increase`);\r\n//             fetchProducts();\r\n//         } catch (error) {\r\n//             console.error('Error increasing quantity:', error);\r\n//         }\r\n//     };\r\n\r\n//     const decreaseQuantity = async (id) => {\r\n//         try {\r\n//             await axios.patch(`/api/products/${id}/decrease`);\r\n//             fetchProducts();\r\n//         } catch (error) {\r\n//             console.error('Error decreasing quantity:', error);\r\n//         }\r\n//     };\r\n\r\n//     const deleteProduct = async (id) => {\r\n//         try {\r\n//             await axios.delete(`/api/products/${id}`);\r\n//             setProducts(products.filter(product => product._id !== id));\r\n//         } catch (error) {\r\n//             console.error('Error deleting product:', error);\r\n//         }\r\n//     };\r\n\r\n//     const editProduct = (product) => {\r\n//         setName(product.name);\r\n//         setQuantity(product.quantity);\r\n//         setEditingProductId(product._id);\r\n//     };\r\n\r\n//     const resetForm = () => {\r\n//         setName('');\r\n//         setQuantity(0);\r\n//         setEditingProductId(null);\r\n//     };\r\n\r\n//     const handleSave = () => {\r\n//         if (editingProductId) {\r\n//             updateProduct(editingProductId);\r\n//         } else {\r\n//             addProduct();\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1>Inventory Management System</h1>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Product Name\"\r\n//                 value={name}\r\n//                 onChange={(e) => setName(e.target.value)}\r\n//             />\r\n//             <input\r\n//                 type=\"number\"\r\n//                 placeholder=\"Quantity\"\r\n//                 value={quantity}\r\n//                 onChange={(e) => setQuantity(Number(e.target.value))}\r\n//             />\r\n//             <button onClick={handleSave}>\r\n//                 {editingProductId ? 'Update Product' : 'Add Product'}\r\n//             </button>\r\n//             <button onClick={resetForm}>Reset</button>\r\n//             <button onClick={fetchProducts}>Refresh</button>\r\n//             <h2>Products</h2>\r\n//             <ul>\r\n//                 {products.map(product => (\r\n//                     <li key={product._id}>\r\n//                         {product.name}: {product.quantity}\r\n//                         <button onClick={() => increaseQuantity(product._id)}>Increase</button>\r\n//                         <button onClick={() => decreaseQuantity(product._id)}>Decrease</button>\r\n//                         <button onClick={() => editProduct(product)}>Edit</button>\r\n//                         <button onClick={() => deleteProduct(product._id)}>Delete</button>\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Inventory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}