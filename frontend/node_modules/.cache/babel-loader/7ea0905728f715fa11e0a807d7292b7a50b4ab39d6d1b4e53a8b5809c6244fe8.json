{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { toast } from 'react-toastify';\n// import '../styles/myStyles.css';\n\n// const Inventory = () => {\n//   const [products, setProducts] = useState([]);\n//   const [name, setName] = useState('');\n//   const [quantity, setQuantity] = useState(0);\n//   const [editingProductId, setEditingProductId] = useState(null);\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const res = await axios.get('/api/products');\n//       setProducts(res.data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//       toast.error('Error fetching products');\n//     }\n//   };\n\n//   const sendNotification = async (productId) => {\n//     try {\n//       const res = await axios.post(`/send-email/${productId}`);\n//       toast.success(res.data.message);\n//     } catch (error) {\n//       console.error('Error sending notification email:', error);\n//       toast.error('Error sending notification email');\n//     }\n//   };\n\n//   const addProduct = async () => {\n//     try {\n//       const product = { name, quantity };\n//       const res = await axios.post('/api/products', product);\n//       setProducts([...products, res.data]);\n//       resetForm();\n//       toast.success('Product added successfully');\n//     } catch (error) {\n//       console.error('Error adding product:', error);\n//       toast.error('Error adding product');\n//     }\n//   };\n\n//   const updateProduct = async (id) => {\n//     try {\n//       const product = { name, quantity };\n//       await axios.put(`/api/products/${id}`, product);\n//       fetchProducts();\n//       resetForm();\n//       toast.success('Product updated successfully');\n//     } catch (error) {\n//       console.error('Error updating product:', error);\n//       toast.error('Error updating product');\n//     }\n//   };\n\n//   const increaseQuantity = async (id) => {\n//     try {\n//       await axios.patch(`/api/products/${id}/increase`);\n//       fetchProducts();\n//       toast.success('Quantity increased successfully');\n//     } catch (error) {\n//       console.error('Error increasing quantity:', error);\n//       toast.error('Error increasing quantity');\n//     }\n//   };\n\n//   const decreaseQuantity = async (id) => {\n//     try {\n//       await axios.patch(`/api/products/${id}/decrease`);\n//       fetchProducts();\n//       toast.success('Quantity decreased successfully');\n//     } catch (error) {\n//       console.error('Error decreasing quantity:', error);\n//       toast.error('Error decreasing quantity');\n//     }\n//   };\n\n//   const deleteProduct = async (id) => {\n//     try {\n//       await axios.delete(`/api/products/${id}`);\n//       setProducts(products.filter((product) => product._id !== id));\n//       toast.success('Product deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting product:', error);\n//       toast.error('Error deleting product');\n//     }\n//   };\n\n//   const editProduct = (product) => {\n//     setName(product.name);\n//     setQuantity(product.quantity);\n//     setEditingProductId(product._id);\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setQuantity(0);\n//     setEditingProductId(null);\n//   };\n\n//   const handleSave = () => {\n//     if (editingProductId) {\n//       updateProduct(editingProductId);\n//     } else {\n//       addProduct();\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"header\">Inventory Management System</h1>\n//       <div className=\"form-group\">\n//         <label className=\"label\" htmlFor=\"productName\">Product Name</label>\n//         <input\n//           type=\"text\"\n//           id=\"productName\"\n//           placeholder=\"Product Name\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           className=\"input\"\n//         />\n//         <label className=\"label\" htmlFor=\"quantity\">Quantity</label>\n//         <input\n//           type=\"number\"\n//           id=\"quantity\"\n\n//           placeholder=\"Quantity\"\n//           value={quantity}\n//           required\n//           onChange={(e) => setQuantity(Number(e.target.value))}\n//           className=\"input\"\n//         />\n//       </div>\n//       <div className=\"button-group\">\n//         <button\n//           onClick={handleSave}\n//           className={`button ${editingProductId ? 'button-primary' : 'button-success'}`}\n//         >\n//           {editingProductId ? 'Update Product' : 'Add Product'}\n//         </button>\n//         <button\n//           onClick={resetForm}\n//           className=\"button button-secondary\"\n//         >\n//           Reset\n//         </button>\n//         <button\n//           onClick={fetchProducts}\n//           className=\"button button-success\"\n//         >\n//           Refresh\n//         </button>\n//       </div>\n//       <h2 className=\"header\">Products</h2>\n//       <ul className=\"product-list\">\n//         {products.map((product) => (\n//           <li key={product._id} className=\"product-item\">\n//             <div className=\"product-details\">\n//               <span><span className=\"label\">Name:</span> {product.name}</span>\n//               <span><span className=\"label\">Quantity:</span> {product.quantity}</span>\n//             </div>\n//             <div className=\"button-group\">\n//               <button\n//                 onClick={() => increaseQuantity(product._id)}\n//                 className=\"button button-primary\"\n//               >\n//                 Increase\n//               </button>\n//               <button\n//                 onClick={() => decreaseQuantity(product._id)}\n//                 className=\"button button-warning\"\n//               >\n//                 Decrease\n//               </button>\n//               <button\n//                 onClick={() => editProduct(product)}\n//                 className=\"button button-secondary\"\n//               >\n//                 Edit\n//               </button>\n//               <button\n//                 onClick={() => deleteProduct(product._id)}\n//                 className=\"button button-danger\"\n//               >\n//                 Delete\n//               </button>\n//               <button\n//                 onClick={() => sendNotification(product._id)}\n//                 className=\"button button-success\"\n//                 disabled={product.quantity !== 0}\n//               >\n//                 Send Notification\n//               </button>\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Inventory;","map":{"version":3,"names":[],"sources":["D:/CTD-LABS-App/frontend/src/components/Inventory.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { toast } from 'react-toastify';\r\n// import '../styles/myStyles.css';\r\n\r\n// const Inventory = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [quantity, setQuantity] = useState(0);\r\n//   const [editingProductId, setEditingProductId] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const fetchProducts = async () => {\r\n//     try {\r\n//       const res = await axios.get('/api/products');\r\n//       setProducts(res.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching products:', error);\r\n//       toast.error('Error fetching products');\r\n//     }\r\n//   };\r\n\r\n//   const sendNotification = async (productId) => {\r\n//     try {\r\n//       const res = await axios.post(`/send-email/${productId}`);\r\n//       toast.success(res.data.message);\r\n//     } catch (error) {\r\n//       console.error('Error sending notification email:', error);\r\n//       toast.error('Error sending notification email');\r\n//     }\r\n//   };\r\n\r\n//   const addProduct = async () => {\r\n//     try {\r\n//       const product = { name, quantity };\r\n//       const res = await axios.post('/api/products', product);\r\n//       setProducts([...products, res.data]);\r\n//       resetForm();\r\n//       toast.success('Product added successfully');\r\n//     } catch (error) {\r\n//       console.error('Error adding product:', error);\r\n//       toast.error('Error adding product');\r\n//     }\r\n//   };\r\n\r\n//   const updateProduct = async (id) => {\r\n//     try {\r\n//       const product = { name, quantity };\r\n//       await axios.put(`/api/products/${id}`, product);\r\n//       fetchProducts();\r\n//       resetForm();\r\n//       toast.success('Product updated successfully');\r\n//     } catch (error) {\r\n//       console.error('Error updating product:', error);\r\n//       toast.error('Error updating product');\r\n//     }\r\n//   };\r\n\r\n//   const increaseQuantity = async (id) => {\r\n//     try {\r\n//       await axios.patch(`/api/products/${id}/increase`);\r\n//       fetchProducts();\r\n//       toast.success('Quantity increased successfully');\r\n//     } catch (error) {\r\n//       console.error('Error increasing quantity:', error);\r\n//       toast.error('Error increasing quantity');\r\n//     }\r\n//   };\r\n\r\n//   const decreaseQuantity = async (id) => {\r\n//     try {\r\n//       await axios.patch(`/api/products/${id}/decrease`);\r\n//       fetchProducts();\r\n//       toast.success('Quantity decreased successfully');\r\n//     } catch (error) {\r\n//       console.error('Error decreasing quantity:', error);\r\n//       toast.error('Error decreasing quantity');\r\n//     }\r\n//   };\r\n\r\n//   const deleteProduct = async (id) => {\r\n//     try {\r\n//       await axios.delete(`/api/products/${id}`);\r\n//       setProducts(products.filter((product) => product._id !== id));\r\n//       toast.success('Product deleted successfully');\r\n//     } catch (error) {\r\n//       console.error('Error deleting product:', error);\r\n//       toast.error('Error deleting product');\r\n//     }\r\n//   };\r\n\r\n//   const editProduct = (product) => {\r\n//     setName(product.name);\r\n//     setQuantity(product.quantity);\r\n//     setEditingProductId(product._id);\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setName('');\r\n//     setQuantity(0);\r\n//     setEditingProductId(null);\r\n//   };\r\n\r\n//   const handleSave = () => {\r\n//     if (editingProductId) {\r\n//       updateProduct(editingProductId);\r\n//     } else {\r\n//       addProduct();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1 className=\"header\">Inventory Management System</h1>\r\n//       <div className=\"form-group\">\r\n//         <label className=\"label\" htmlFor=\"productName\">Product Name</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"productName\"\r\n//           placeholder=\"Product Name\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//           className=\"input\"\r\n//         />\r\n//         <label className=\"label\" htmlFor=\"quantity\">Quantity</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           id=\"quantity\"\r\n  \r\n//           placeholder=\"Quantity\"\r\n//           value={quantity}\r\n//           required\r\n//           onChange={(e) => setQuantity(Number(e.target.value))}\r\n//           className=\"input\"\r\n//         />\r\n//       </div>\r\n//       <div className=\"button-group\">\r\n//         <button\r\n//           onClick={handleSave}\r\n//           className={`button ${editingProductId ? 'button-primary' : 'button-success'}`}\r\n//         >\r\n//           {editingProductId ? 'Update Product' : 'Add Product'}\r\n//         </button>\r\n//         <button\r\n//           onClick={resetForm}\r\n//           className=\"button button-secondary\"\r\n//         >\r\n//           Reset\r\n//         </button>\r\n//         <button\r\n//           onClick={fetchProducts}\r\n//           className=\"button button-success\"\r\n//         >\r\n//           Refresh\r\n//         </button>\r\n//       </div>\r\n//       <h2 className=\"header\">Products</h2>\r\n//       <ul className=\"product-list\">\r\n//         {products.map((product) => (\r\n//           <li key={product._id} className=\"product-item\">\r\n//             <div className=\"product-details\">\r\n//               <span><span className=\"label\">Name:</span> {product.name}</span>\r\n//               <span><span className=\"label\">Quantity:</span> {product.quantity}</span>\r\n//             </div>\r\n//             <div className=\"button-group\">\r\n//               <button\r\n//                 onClick={() => increaseQuantity(product._id)}\r\n//                 className=\"button button-primary\"\r\n//               >\r\n//                 Increase\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => decreaseQuantity(product._id)}\r\n//                 className=\"button button-warning\"\r\n//               >\r\n//                 Decrease\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => editProduct(product)}\r\n//                 className=\"button button-secondary\"\r\n//               >\r\n//                 Edit\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => deleteProduct(product._id)}\r\n//                 className=\"button button-danger\"\r\n//               >\r\n//                 Delete\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => sendNotification(product._id)}\r\n//                 className=\"button button-success\"\r\n//                 disabled={product.quantity !== 0}\r\n//               >\r\n//                 Send Notification\r\n//               </button>\r\n//             </div>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Inventory;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}