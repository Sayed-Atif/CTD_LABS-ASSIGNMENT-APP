{"ast":null,"code":"var _jsxFileName = \"D:\\\\CTD-LABS-App\\\\frontend\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState(0);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const res = await axios.get('/api/products'); // Ensure the endpoint is correct\n      setProducts(res.data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const addProduct = async () => {\n    try {\n      const product = {\n        name,\n        quantity\n      };\n      const res = await axios.post('/api/products', product); // Ensure the endpoint is correct\n      setProducts([...products, res.data]);\n      setName('');\n      setQuantity(0);\n      console.log(res.data);\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n\n  //Send notification email to user when quantity is zero:\n  const sendNotification = async id => {\n    try {\n      await axios.patch(`/api/products/sendmail/${id}`);\n      console.log('Notification sent successfully!');\n      fetchProducts();\n    } catch (error) {\n      console.error('Error sending notification:', error);\n    }\n  };\n  const increaseQuantity = async id => {\n    try {\n      await axios.patch(`/api/products/${id}/increase`);\n      fetchProducts();\n    } catch (error) {\n      console.error('Error increasing quantity:', error);\n    }\n  };\n  const decreaseQuantity = async id => {\n    try {\n      await axios.patch(`/api/products/${id}/decrease`);\n      fetchProducts();\n      if (quantity === 0) {\n        sendNotification(id);\n      }\n    } catch (error) {\n      console.error('Error decreasing quantity:', error);\n    }\n  };\n\n  // const deleteProduct = async (id) => {\n  //     try {\n  //         await axios.delete(`/api/products/${id}`); // Ensure the endpoint is correct\n  //         setProducts(products.filter(product => product._id !== id));\n  //     } catch (error) {\n  //         console.error('Error deleting product:', error);\n  //     }\n  // };\n\n  // const updateProduct = async (id) => {\n  //     try {\n  //         const product = { name, quantity };\n  //         await axios.patch(`/api/products/${id}`, product); // Ensure the endpoint is correct\n  //         fetchProducts();\n  //     } catch (error) {\n  //         console.error('Error updating product:', error);\n  //     }\n  // };\n\n  // const editProduct = (id) => {\n  //     const product = products.find(product => product._id === id);\n  //     setName(product.name);\n  //     setQuantity(product.quantity);\n  // };\n\n  // const saveProduct = (id) => {\n  //     updateProduct(id);\n  //     setName('');\n  //     setQuantity(0);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inventory Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Product Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Quantity\",\n      value: quantity,\n      onChange: e => setQuantity(Number(e.target.value)) // Ensure it's a number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addProduct,\n      children: \"Add/Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \": \", product.quantity, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => increaseQuantity(product._id),\n          children: \"Increase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => decreaseQuantity(product._id),\n          children: \"Decrease\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n_s(Inventory, \"pqS/p8w6HdmN7eJ6a/DS1Delchg=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Inventory","_s","products","setProducts","name","setName","quantity","setQuantity","fetchProducts","res","get","data","error","console","addProduct","product","post","log","sendNotification","id","patch","increaseQuantity","decreaseQuantity","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","Number","onClick","map","_id","_c","$RefreshReg$"],"sources":["D:/CTD-LABS-App/frontend/src/components/Inventory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Inventory = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [quantity, setQuantity] = useState(0);\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const res = await axios.get('/api/products'); // Ensure the endpoint is correct\r\n            setProducts(res.data);\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n        }\r\n    };\r\n\r\n    const addProduct = async () => {\r\n        try {\r\n            const product = { name, quantity };\r\n            const res = await axios.post('/api/products', product); // Ensure the endpoint is correct\r\n            setProducts([...products, res.data]);\r\n            setName('');\r\n            setQuantity(0);\r\n            console.log(res.data);\r\n        } catch (error) {\r\n            console.error('Error adding product:', error);\r\n        }\r\n    };\r\n\r\n\r\n     //Send notification email to user when quantity is zero:\r\n     const sendNotification = async (id) => {\r\n        try {\r\n            await axios.patch(`/api/products/sendmail/${id}`); \r\n            console.log('Notification sent successfully!');\r\n            fetchProducts();\r\n        } catch (error) {\r\n            console.error('Error sending notification:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const increaseQuantity = async (id) => {\r\n        try {\r\n            await axios.patch(`/api/products/${id}/increase`); \r\n            fetchProducts();\r\n        } catch (error) {\r\n            console.error('Error increasing quantity:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const decreaseQuantity = async (id) => {\r\n        try {\r\n            await axios.patch(`/api/products/${id}/decrease`); \r\n            fetchProducts();\r\n            if (quantity === 0) {\r\n                sendNotification(id);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error decreasing quantity:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // const deleteProduct = async (id) => {\r\n    //     try {\r\n    //         await axios.delete(`/api/products/${id}`); // Ensure the endpoint is correct\r\n    //         setProducts(products.filter(product => product._id !== id));\r\n    //     } catch (error) {\r\n    //         console.error('Error deleting product:', error);\r\n    //     }\r\n    // };\r\n\r\n    // const updateProduct = async (id) => {\r\n    //     try {\r\n    //         const product = { name, quantity };\r\n    //         await axios.patch(`/api/products/${id}`, product); // Ensure the endpoint is correct\r\n    //         fetchProducts();\r\n    //     } catch (error) {\r\n    //         console.error('Error updating product:', error);\r\n    //     }\r\n    // };\r\n\r\n    // const editProduct = (id) => {\r\n    //     const product = products.find(product => product._id === id);\r\n    //     setName(product.name);\r\n    //     setQuantity(product.quantity);\r\n    // };\r\n\r\n    // const saveProduct = (id) => {\r\n    //     updateProduct(id);\r\n    //     setName('');\r\n    //     setQuantity(0);\r\n    // };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Inventory Management System</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Product Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Quantity\"\r\n                value={quantity}\r\n                onChange={(e) => setQuantity(Number(e.target.value))} // Ensure it's a number\r\n            />\r\n            <button onClick={addProduct}>Add/Update Product</button>\r\n            <ul>\r\n                {products.map(product => (\r\n                    <li key={product._id}>\r\n                        {product.name}: {product.quantity}\r\n                        <button onClick={() => increaseQuantity(product._id)}>Increase</button>\r\n                        <button onClick={() => decreaseQuantity(product._id)}>Decrease</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Inventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}