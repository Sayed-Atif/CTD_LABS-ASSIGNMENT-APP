{"ast":null,"code":"var _jsxFileName = \"D:\\\\CTD-LABS-App\\\\frontend\\\\src\\\\components\\\\Inventory.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { toast } from 'react-toastify';\n// import '../styles/myStyles.css';\n\n// const Inventory = () => {\n//   const [products, setProducts] = useState([]);\n//   const [name, setName] = useState('');\n//   const [quantity, setQuantity] = useState(0);\n//   const [editingProductId, setEditingProductId] = useState(null);\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const res = await axios.get('/api/products');\n//       setProducts(res.data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//       toast.error('Error fetching products');\n//     }\n//   };\n\n//   const sendNotification = async (productId) => {\n//     try {\n//       const res = await axios.post(`/send-email/${productId}`);\n//       toast.success(res.data.message);\n//     } catch (error) {\n//       console.error('Error sending notification email:', error);\n//       toast.error('Error sending notification email');\n//     }\n//   };\n\n//   const addProduct = async () => {\n//     try {\n//       const product = { name, quantity };\n//       const res = await axios.post('/api/products', product);\n//       setProducts([...products, res.data]);\n//       resetForm();\n//       toast.success('Product added successfully');\n//     } catch (error) {\n//       console.error('Error adding product:', error);\n//       toast.error('Error adding product');\n//     }\n//   };\n\n//   const updateProduct = async (id) => {\n//     try {\n//       const product = { name, quantity };\n//       await axios.put(`/api/products/${id}`, product);\n//       fetchProducts();\n//       resetForm();\n//       toast.success('Product updated successfully');\n//     } catch (error) {\n//       console.error('Error updating product:', error);\n//       toast.error('Error updating product');\n//     }\n//   };\n\n//   const increaseQuantity = async (id) => {\n//     try {\n//       await axios.patch(`/api/products/${id}/increase`);\n//       fetchProducts();\n//       toast.success('Quantity increased successfully');\n//     } catch (error) {\n//       console.error('Error increasing quantity:', error);\n//       toast.error('Error increasing quantity');\n//     }\n//   };\n\n//   const decreaseQuantity = async (id) => {\n//     try {\n//       await axios.patch(`/api/products/${id}/decrease`);\n//       fetchProducts();\n//       toast.success('Quantity decreased successfully');\n//     } catch (error) {\n//       console.error('Error decreasing quantity:', error);\n//       toast.error('Error decreasing quantity');\n//     }\n//   };\n\n//   const deleteProduct = async (id) => {\n//     try {\n//       await axios.delete(`/api/products/${id}`);\n//       setProducts(products.filter((product) => product._id !== id));\n//       toast.success('Product deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting product:', error);\n//       toast.error('Error deleting product');\n//     }\n//   };\n\n//   const editProduct = (product) => {\n//     setName(product.name);\n//     setQuantity(product.quantity);\n//     setEditingProductId(product._id);\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setQuantity(0);\n//     setEditingProductId(null);\n//   };\n\n//   const handleSave = () => {\n//     if (editingProductId) {\n//       updateProduct(editingProductId);\n//     } else {\n//       addProduct();\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1 className=\"header\">Inventory Management System</h1>\n//       <div className=\"form-group\">\n//         <label className=\"label\" htmlFor=\"productName\">Product Name</label>\n//         <input\n//           type=\"text\"\n//           id=\"productName\"\n//           placeholder=\"Product Name\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           className=\"input\"\n//         />\n//         <label className=\"label\" htmlFor=\"quantity\">Quantity</label>\n//         <input\n//           type=\"number\"\n//           id=\"quantity\"\n\n//           placeholder=\"Quantity\"\n//           value={quantity}\n//           required\n//           onChange={(e) => setQuantity(Number(e.target.value))}\n//           className=\"input\"\n//         />\n//       </div>\n//       <div className=\"button-group\">\n//         <button\n//           onClick={handleSave}\n//           className={`button ${editingProductId ? 'button-primary' : 'button-success'}`}\n//         >\n//           {editingProductId ? 'Update Product' : 'Add Product'}\n//         </button>\n//         <button\n//           onClick={resetForm}\n//           className=\"button button-secondary\"\n//         >\n//           Reset\n//         </button>\n//         <button\n//           onClick={fetchProducts}\n//           className=\"button button-success\"\n//         >\n//           Refresh\n//         </button>\n//       </div>\n//       <h2 className=\"header\">Products</h2>\n//       <ul className=\"product-list\">\n//         {products.map((product) => (\n//           <li key={product._id} className=\"product-item\">\n//             <div className=\"product-details\">\n//               <span><span className=\"label\">Name:</span> {product.name}</span>\n//               <span><span className=\"label\">Quantity:</span> {product.quantity}</span>\n//             </div>\n//             <div className=\"button-group\">\n//               <button\n//                 onClick={() => increaseQuantity(product._id)}\n//                 className=\"button button-primary\"\n//               >\n//                 Increase\n//               </button>\n//               <button\n//                 onClick={() => decreaseQuantity(product._id)}\n//                 className=\"button button-warning\"\n//               >\n//                 Decrease\n//               </button>\n//               <button\n//                 onClick={() => editProduct(product)}\n//                 className=\"button button-secondary\"\n//               >\n//                 Edit\n//               </button>\n//               <button\n//                 onClick={() => deleteProduct(product._id)}\n//                 className=\"button button-danger\"\n//               >\n//                 Delete\n//               </button>\n//               <button\n//                 onClick={() => sendNotification(product._id)}\n//                 className=\"button button-success\"\n//                 disabled={product.quantity !== 0}\n//               >\n//                 Send Notification\n//               </button>\n//             </div>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Inventory;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/myStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState(0);\n  const [editingProductId, setEditingProductId] = useState(null);\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const res = await axios.get('/api/products');\n      setProducts(res.data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      toast.error('Error fetching products');\n    }\n  };\n  const sendNotification = async productId => {\n    try {\n      const res = await axios.post(`/send-email/${productId}`);\n      toast.success(res.data.message);\n    } catch (error) {\n      console.error('Error sending notification email:', error);\n      toast.error('Error sending notification email');\n    }\n  };\n  const validateForm = () => {\n    const errors = {};\n    if (name.trim().length < 3) {\n      errors.name = 'Name is required and must be at least 3 characters long';\n      toast.error('Name is required and must be at least 3 characters long');\n    }\n    if (quantity < 0) {\n      errors.quantity = 'Quantity is required and must be a non-negative number';\n      toast.error('Quantity is required and must be a non-negative number');\n    }\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const addProduct = async () => {\n    if (!validateForm()) return;\n    try {\n      const product = {\n        name,\n        quantity\n      };\n      const res = await axios.post('/api/products', product);\n      setProducts([...products, res.data]);\n      resetForm();\n      toast.success('Product added successfully');\n    } catch (error) {\n      console.error('Error adding product:', error);\n      toast.error('Error adding product');\n    }\n  };\n  const updateProduct = async id => {\n    if (!validateForm()) return;\n    try {\n      const product = {\n        name,\n        quantity\n      };\n      await axios.put(`/api/products/${id}`, product);\n      fetchProducts();\n      resetForm();\n      toast.success('Product updated successfully');\n    } catch (error) {\n      console.error('Error updating product:', error);\n      toast.error('Error updating product');\n    }\n  };\n  const increaseQuantity = async id => {\n    try {\n      await axios.patch(`/api/products/${id}/increase`);\n      fetchProducts();\n      toast.success('Quantity increased successfully');\n    } catch (error) {\n      console.error('Error increasing quantity:', error);\n      toast.error('Error increasing quantity');\n    }\n  };\n  const decreaseQuantity = async id => {\n    try {\n      await axios.patch(`/api/products/${id}/decrease`);\n      fetchProducts();\n      toast.success('Quantity decreased successfully');\n    } catch (error) {\n      console.error('Error decreasing quantity:', error);\n      toast.error('Error decreasing quantity');\n    }\n  };\n  const deleteProduct = async id => {\n    try {\n      await axios.delete(`/api/products/${id}`);\n      setProducts(products.filter(product => product._id !== id));\n      toast.success('Product deleted successfully');\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      toast.error('Error deleting product');\n    }\n  };\n  const editProduct = product => {\n    setName(product.name);\n    setQuantity(product.quantity);\n    setEditingProductId(product._id);\n  };\n  const resetForm = () => {\n    setName('');\n    setQuantity(0);\n    setEditingProductId(null);\n    setErrors({});\n  };\n  const handleSave = () => {\n    if (editingProductId) {\n      updateProduct(editingProductId);\n    } else {\n      addProduct();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Inventory Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"productName\",\n        children: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"productName\",\n        placeholder: \"Product Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"quantity\",\n        children: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"quantity\",\n        placeholder: \"Quantity\",\n        value: quantity,\n        required: true,\n        onChange: e => setQuantity(Number(e.target.value)),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), errors.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: errors.quantity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: `button ${editingProductId ? 'button-primary' : 'button-success'}`,\n        children: editingProductId ? 'Update Product' : 'Add Product'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetForm,\n        className: \"button button-secondary\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchProducts,\n        className: \"button button-success\",\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"product-list\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"product-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 21\n            }, this), \" \", product.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"label\",\n              children: \"Quantity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 21\n            }, this), \" \", product.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => increaseQuantity(product._id),\n            className: \"button button-primary\",\n            children: \"Increase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => decreaseQuantity(product._id),\n            className: \"button button-warning\",\n            children: \"Decrease\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editProduct(product),\n            className: \"button button-secondary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteProduct(product._id),\n            className: \"button button-danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendNotification(product._id),\n            className: \"button button-success\",\n            disabled: product.quantity !== 0,\n            children: \"Send Notification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n};\n_s(Inventory, \"e/Z6cxXC2wWXZmxaduLL+seMZ+k=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","axios","toast","ToastContainer","jsxDEV","_jsxDEV","Inventory","_s","products","setProducts","name","setName","quantity","setQuantity","editingProductId","setEditingProductId","errors","setErrors","fetchProducts","res","get","data","error","console","sendNotification","productId","post","success","message","validateForm","trim","length","Object","keys","addProduct","product","resetForm","updateProduct","id","put","increaseQuantity","patch","decreaseQuantity","deleteProduct","delete","filter","_id","editProduct","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","value","onChange","e","target","required","Number","onClick","map","disabled","_c","$RefreshReg$"],"sources":["D:/CTD-LABS-App/frontend/src/components/Inventory.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { toast } from 'react-toastify';\r\n// import '../styles/myStyles.css';\r\n\r\n// const Inventory = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [quantity, setQuantity] = useState(0);\r\n//   const [editingProductId, setEditingProductId] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const fetchProducts = async () => {\r\n//     try {\r\n//       const res = await axios.get('/api/products');\r\n//       setProducts(res.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching products:', error);\r\n//       toast.error('Error fetching products');\r\n//     }\r\n//   };\r\n\r\n//   const sendNotification = async (productId) => {\r\n//     try {\r\n//       const res = await axios.post(`/send-email/${productId}`);\r\n//       toast.success(res.data.message);\r\n//     } catch (error) {\r\n//       console.error('Error sending notification email:', error);\r\n//       toast.error('Error sending notification email');\r\n//     }\r\n//   };\r\n\r\n//   const addProduct = async () => {\r\n//     try {\r\n//       const product = { name, quantity };\r\n//       const res = await axios.post('/api/products', product);\r\n//       setProducts([...products, res.data]);\r\n//       resetForm();\r\n//       toast.success('Product added successfully');\r\n//     } catch (error) {\r\n//       console.error('Error adding product:', error);\r\n//       toast.error('Error adding product');\r\n//     }\r\n//   };\r\n\r\n//   const updateProduct = async (id) => {\r\n//     try {\r\n//       const product = { name, quantity };\r\n//       await axios.put(`/api/products/${id}`, product);\r\n//       fetchProducts();\r\n//       resetForm();\r\n//       toast.success('Product updated successfully');\r\n//     } catch (error) {\r\n//       console.error('Error updating product:', error);\r\n//       toast.error('Error updating product');\r\n//     }\r\n//   };\r\n\r\n//   const increaseQuantity = async (id) => {\r\n//     try {\r\n//       await axios.patch(`/api/products/${id}/increase`);\r\n//       fetchProducts();\r\n//       toast.success('Quantity increased successfully');\r\n//     } catch (error) {\r\n//       console.error('Error increasing quantity:', error);\r\n//       toast.error('Error increasing quantity');\r\n//     }\r\n//   };\r\n\r\n//   const decreaseQuantity = async (id) => {\r\n//     try {\r\n//       await axios.patch(`/api/products/${id}/decrease`);\r\n//       fetchProducts();\r\n//       toast.success('Quantity decreased successfully');\r\n//     } catch (error) {\r\n//       console.error('Error decreasing quantity:', error);\r\n//       toast.error('Error decreasing quantity');\r\n//     }\r\n//   };\r\n\r\n//   const deleteProduct = async (id) => {\r\n//     try {\r\n//       await axios.delete(`/api/products/${id}`);\r\n//       setProducts(products.filter((product) => product._id !== id));\r\n//       toast.success('Product deleted successfully');\r\n//     } catch (error) {\r\n//       console.error('Error deleting product:', error);\r\n//       toast.error('Error deleting product');\r\n//     }\r\n//   };\r\n\r\n//   const editProduct = (product) => {\r\n//     setName(product.name);\r\n//     setQuantity(product.quantity);\r\n//     setEditingProductId(product._id);\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setName('');\r\n//     setQuantity(0);\r\n//     setEditingProductId(null);\r\n//   };\r\n\r\n//   const handleSave = () => {\r\n//     if (editingProductId) {\r\n//       updateProduct(editingProductId);\r\n//     } else {\r\n//       addProduct();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1 className=\"header\">Inventory Management System</h1>\r\n//       <div className=\"form-group\">\r\n//         <label className=\"label\" htmlFor=\"productName\">Product Name</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"productName\"\r\n//           placeholder=\"Product Name\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//           className=\"input\"\r\n//         />\r\n//         <label className=\"label\" htmlFor=\"quantity\">Quantity</label>\r\n//         <input\r\n//           type=\"number\"\r\n//           id=\"quantity\"\r\n  \r\n//           placeholder=\"Quantity\"\r\n//           value={quantity}\r\n//           required\r\n//           onChange={(e) => setQuantity(Number(e.target.value))}\r\n//           className=\"input\"\r\n//         />\r\n//       </div>\r\n//       <div className=\"button-group\">\r\n//         <button\r\n//           onClick={handleSave}\r\n//           className={`button ${editingProductId ? 'button-primary' : 'button-success'}`}\r\n//         >\r\n//           {editingProductId ? 'Update Product' : 'Add Product'}\r\n//         </button>\r\n//         <button\r\n//           onClick={resetForm}\r\n//           className=\"button button-secondary\"\r\n//         >\r\n//           Reset\r\n//         </button>\r\n//         <button\r\n//           onClick={fetchProducts}\r\n//           className=\"button button-success\"\r\n//         >\r\n//           Refresh\r\n//         </button>\r\n//       </div>\r\n//       <h2 className=\"header\">Products</h2>\r\n//       <ul className=\"product-list\">\r\n//         {products.map((product) => (\r\n//           <li key={product._id} className=\"product-item\">\r\n//             <div className=\"product-details\">\r\n//               <span><span className=\"label\">Name:</span> {product.name}</span>\r\n//               <span><span className=\"label\">Quantity:</span> {product.quantity}</span>\r\n//             </div>\r\n//             <div className=\"button-group\">\r\n//               <button\r\n//                 onClick={() => increaseQuantity(product._id)}\r\n//                 className=\"button button-primary\"\r\n//               >\r\n//                 Increase\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => decreaseQuantity(product._id)}\r\n//                 className=\"button button-warning\"\r\n//               >\r\n//                 Decrease\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => editProduct(product)}\r\n//                 className=\"button button-secondary\"\r\n//               >\r\n//                 Edit\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => deleteProduct(product._id)}\r\n//                 className=\"button button-danger\"\r\n//               >\r\n//                 Delete\r\n//               </button>\r\n//               <button\r\n//                 onClick={() => sendNotification(product._id)}\r\n//                 className=\"button button-success\"\r\n//                 disabled={product.quantity !== 0}\r\n//               >\r\n//                 Send Notification\r\n//               </button>\r\n//             </div>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Inventory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../styles/myStyles.css';\r\n\r\nconst Inventory = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [editingProductId, setEditingProductId] = useState(null);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get('/api/products');\r\n      setProducts(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n      toast.error('Error fetching products');\r\n    }\r\n  };\r\n\r\n  const sendNotification = async (productId) => {\r\n    try {\r\n      const res = await axios.post(`/send-email/${productId}`);\r\n      toast.success(res.data.message);\r\n    } catch (error) {\r\n      console.error('Error sending notification email:', error);\r\n      toast.error('Error sending notification email');\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (name.trim().length < 3) {\r\n      errors.name = 'Name is required and must be at least 3 characters long';\r\n      toast.error('Name is required and must be at least 3 characters long');\r\n    }\r\n    if (quantity < 0) {\r\n      errors.quantity = 'Quantity is required and must be a non-negative number';\r\n      toast.error('Quantity is required and must be a non-negative number');\r\n    }\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const addProduct = async () => {\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      const product = { name, quantity };\r\n      const res = await axios.post('/api/products', product);\r\n      setProducts([...products, res.data]);\r\n      resetForm();\r\n      toast.success('Product added successfully');\r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n      toast.error('Error adding product');\r\n    }\r\n  };\r\n\r\n  const updateProduct = async (id) => {\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      const product = { name, quantity };\r\n      await axios.put(`/api/products/${id}`, product);\r\n      fetchProducts();\r\n      resetForm();\r\n      toast.success('Product updated successfully');\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      toast.error('Error updating product');\r\n    }\r\n  };\r\n\r\n  const increaseQuantity = async (id) => {\r\n    try {\r\n      await axios.patch(`/api/products/${id}/increase`);\r\n      fetchProducts();\r\n      toast.success('Quantity increased successfully');\r\n    } catch (error) {\r\n      console.error('Error increasing quantity:', error);\r\n      toast.error('Error increasing quantity');\r\n    }\r\n  };\r\n\r\n  const decreaseQuantity = async (id) => {\r\n    try {\r\n      await axios.patch(`/api/products/${id}/decrease`);\r\n      fetchProducts();\r\n      toast.success('Quantity decreased successfully');\r\n    } catch (error) {\r\n      console.error('Error decreasing quantity:', error);\r\n      toast.error('Error decreasing quantity');\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/products/${id}`);\r\n      setProducts(products.filter((product) => product._id !== id));\r\n      toast.success('Product deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n      toast.error('Error deleting product');\r\n    }\r\n  };\r\n\r\n  const editProduct = (product) => {\r\n    setName(product.name);\r\n    setQuantity(product.quantity);\r\n    setEditingProductId(product._id);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setQuantity(0);\r\n    setEditingProductId(null);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (editingProductId) {\r\n      updateProduct(editingProductId);\r\n    } else {\r\n      addProduct();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ToastContainer />\r\n      <h1 className=\"header\">Inventory Management System</h1>\r\n      <div className=\"form-group\">\r\n        <label className=\"label\" htmlFor=\"productName\">Product Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"productName\"\r\n          placeholder=\"Product Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          className=\"input\"\r\n        />\r\n        {errors.name && <div className=\"error\">{errors.name}</div>}\r\n        <label className=\"label\" htmlFor=\"quantity\">Quantity</label>\r\n        \r\n        <input\r\n          type=\"number\"\r\n          id=\"quantity\"\r\n          placeholder=\"Quantity\"\r\n          value={quantity}\r\n          required\r\n          onChange={(e) => setQuantity(Number(e.target.value))}\r\n          className=\"input\"\r\n        />\r\n        {errors.quantity && <div className=\"error\">{errors.quantity}</div>}\r\n      </div>\r\n\r\n      <div className=\"button-group\">\r\n\r\n        <button\r\n          onClick={handleSave}\r\n          className={`button ${editingProductId ? 'button-primary' : 'button-success'}`}\r\n        >\r\n          {editingProductId ? 'Update Product' : 'Add Product'}\r\n        </button>\r\n\r\n        <button\r\n          onClick={resetForm}\r\n          className=\"button button-secondary\"\r\n        >\r\n          Reset\r\n        </button>\r\n\r\n        <button\r\n          onClick={fetchProducts}\r\n          className=\"button button-success\"\r\n        >\r\n          Refresh\r\n        </button>\r\n      </div>\r\n      <h2 className=\"header\">Products</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map((product) => (\r\n          <li key={product._id} className=\"product-item\">\r\n            <div className=\"product-details\">\r\n              <span><span className=\"label\">Name:</span> {product.name}</span>\r\n              <span><span className=\"label\">Quantity:</span> {product.quantity}</span>\r\n            </div>\r\n\r\n            <div className=\"button-group\">\r\n\r\n              <button\r\n                onClick={() => increaseQuantity(product._id)}\r\n                className=\"button button-primary\"\r\n              >\r\n                Increase\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => decreaseQuantity(product._id)}\r\n                className=\"button button-warning\"\r\n              >\r\n                Decrease\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => editProduct(product)}\r\n                className=\"button button-secondary\"\r\n              >\r\n                Edit\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => deleteProduct(product._id)}\r\n                className=\"button button-danger\"\r\n              >\r\n                Delete\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => sendNotification(product._id)}\r\n                className=\"button button-success\"\r\n                disabled={product.quantity !== 0}\r\n              >\r\n                Send Notification\r\n              </button>\r\n\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}