{"ast":null,"code":"var _jsxFileName = \"D:\\\\CTD-LABS-App\\\\frontend\\\\src\\\\components\\\\Inventory.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { ToastContainer } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import '../assets/styles/myStyles.css';\n// import { TOAST_CONFIG, INITIAL_STATE, API_ENDPOINTS, VALIDATION_ERRORS } from '../utils/constants';\n// import ProductForm from './ProductForm';\n// import ProductList from './ProductList';\n\n// const Inventory = () => {\n//   const [products, setProducts] = useState(INITIAL_STATE.products);\n//   const [name, setName] = useState(INITIAL_STATE.name);\n//   const [quantity, setQuantity] = useState(INITIAL_STATE.quantity);\n//   const [editingProductId, setEditingProductId] = useState(INITIAL_STATE.editingProductId);\n//   const [errors, setErrors] = useState(INITIAL_STATE.errors);\n\n//   useEffect(() => {// useEffect to fetch products when the component mounts\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {// fetch products from the API endpoint\n//     try {\n//       const res = await axios.get(API_ENDPOINTS.fetchProducts);\n//       setProducts(res.data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//       TOAST_CONFIG.error('Error fetching products');\n//     }\n//   };\n\n//   const sendNotification = async (productId) => {// send notification email using the API endpoint\n//     try {\n//       const res = await axios.post(API_ENDPOINTS.sendNotification(productId));\n//       TOAST_CONFIG.success(res.data.message);\n//     } catch (error) {\n//       console.error('Error sending notification email:', error);\n//       TOAST_CONFIG.error('Error sending notification email');\n//     }\n//   };\n\n//   const validateForm = () => {// validate form inputs \n//     const errors = {};\n//     if (name.trim().length < 3) {\n//       errors.name = VALIDATION_ERRORS.name;\n//       TOAST_CONFIG.error(VALIDATION_ERRORS.name);\n//     }\n//     if (quantity < 0) {\n//       errors.quantity = VALIDATION_ERRORS.quantity;\n//       TOAST_CONFIG.error(VALIDATION_ERRORS.quantity);\n//     }\n//     setErrors(errors);\n//     return Object.keys(errors).length === 0;\n//   };\n\n//   const addProduct = async () => {// add product to the API endpoint\n//     if (!validateForm()) return;\n\n//     try {\n//       const product = { name, quantity };\n//       const res = await axios.post(API_ENDPOINTS.addProduct, product);\n//       setProducts([...products, res.data]);\n//       resetForm();\n//       TOAST_CONFIG.success('Product added successfully');\n//     } catch (error) {\n//       console.error('Error adding product:', error);\n//       TOAST_CONFIG.error('Error adding product');\n//     }\n//   };\n\n//   const updateProduct = async (id) => {// update product in the API endpoint\n//     if (!validateForm()) return;\n\n//     try {\n//       const product = { name, quantity };\n//       await axios.put(API_ENDPOINTS.updateProduct(id), product);\n//       fetchProducts();\n//       resetForm();\n//       TOAST_CONFIG.success('Product updated successfully');\n//     } catch (error) {\n//       console.error('Error updating product:', error);\n//       TOAST_CONFIG.error('Error updating product');\n//     }\n//   };\n\n//   const increaseQuantity = async (id) => {// increase product quantity in the API endpoint\n//     try {\n//       await axios.patch(API_ENDPOINTS.increaseQuantity(id));\n//       fetchProducts();\n//       TOAST_CONFIG.success('Quantity increased successfully');\n//     } catch (error) {\n//       console.error('Error increasing quantity:', error);\n//       TOAST_CONFIG.error('Error increasing quantity');\n//     }\n//   };\n\n//   const decreaseQuantity = async (id) => {// decrease product quantity in the API endpoint\n//     try {\n//       await axios.patch(API_ENDPOINTS.decreaseQuantity(id));\n//       fetchProducts();\n//       TOAST_CONFIG.success('Quantity decreased successfully');\n//     } catch (error) {\n//       console.error('Error decreasing quantity:', error);\n//       TOAST_CONFIG.error('Error decreasing quantity');\n//     }\n//   };\n\n//   const deleteProduct = async (id) => {// delete product from the API endpoint\n//     try {\n//       await axios.delete(API_ENDPOINTS.deleteProduct(id));\n//       setProducts(products.filter((product) => product._id !== id));\n//       TOAST_CONFIG.success('Product deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting product:', error);\n//       TOAST_CONFIG.error('Error deleting product');\n//     }\n//   };\n\n//   const editProduct = (product) => {// edit product in the form\n//     setName(product.name);\n//     setQuantity(product.quantity);\n//     setEditingProductId(product._id);\n//   };\n\n//   const resetForm = () => {// reset form inputs\n//     setName(INITIAL_STATE.name);\n//     setQuantity(INITIAL_STATE.quantity);\n//     setEditingProductId(INITIAL_STATE.editingProductId);\n//     setErrors(INITIAL_STATE.errors);\n//   };\n\n//   const handleSave = () => {// handle form submission\n//     if (editingProductId) {\n//       updateProduct(editingProductId);\n//     } else {\n//       addProduct();\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <ToastContainer />\n//       <h1 className=\"header\">Inventory Management System</h1>\n//       <ProductForm\n//         name={name}\n//         quantity={quantity}\n//         errors={errors}\n//         setName={setName}\n//         setQuantity={setQuantity}\n//         handleSave={handleSave}\n//         resetForm={resetForm}\n//         fetchProducts={fetchProducts}\n//         editingProductId={editingProductId}\n//       />\n//       <h2 className=\"header\">Products</h2>\n//       <ProductList\n//         products={products}\n//         increaseQuantity={increaseQuantity}\n//         decreaseQuantity={decreaseQuantity}\n//         editProduct={editProduct}\n//         deleteProduct={deleteProduct}\n//         sendNotification={sendNotification}\n//       />\n//     </div>\n//   );\n// };\n\n// export default Inventory;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../assets/styles/myStyles.css';\nimport { TOAST_CONFIG, INITIAL_STATE, API_ENDPOINTS, VALIDATION_ERRORS } from '../utils/constants';\nimport ProductForm from './ProductForm';\nimport ProductList from './ProductList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inventory = () => {\n  _s();\n  const [products, setProducts] = useState(INITIAL_STATE.products);\n  const [name, setName] = useState(INITIAL_STATE.name);\n  const [quantity, setQuantity] = useState(INITIAL_STATE.quantity);\n  const [editingProductId, setEditingProductId] = useState(INITIAL_STATE.editingProductId);\n  const [errors, setErrors] = useState(INITIAL_STATE.errors);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const res = await axios.get(API_ENDPOINTS.fetchProducts);\n      setProducts(res.data);\n    } catch (error) {\n      // console.error('Error fetching products:', error);\n      TOAST_CONFIG.error('Error fetching products');\n    }\n  };\n  const sendNotification = async productId => {\n    try {\n      // Check if the product quantity is zero before sending the notification\n      // const product = products.find((p) => p._id === productId);\n      const res = await axios.post(API_ENDPOINTS.sendNotification(productId));\n      TOAST_CONFIG.success(res.data.message);\n    } catch (error) {\n      // console.error('Error sending notification email:', error);\n      TOAST_CONFIG.error('The product quantity is not zero, cannot send notification');\n    }\n  };\n  const validateForm = () => {\n    const errors = {};\n    if (name.trim().length < 3) {\n      errors.name = VALIDATION_ERRORS.name;\n      TOAST_CONFIG.error(VALIDATION_ERRORS.name);\n    }\n    if (quantity < 0) {\n      errors.quantity = VALIDATION_ERRORS.quantity;\n      TOAST_CONFIG.error(VALIDATION_ERRORS.quantity);\n    }\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const addProduct = async () => {\n    if (!validateForm()) return;\n    try {\n      const product = {\n        name,\n        quantity\n      };\n      const res = await axios.post(API_ENDPOINTS.addProduct, product);\n      setProducts([...products, res.data]);\n      resetForm();\n      TOAST_CONFIG.success('Product added successfully');\n    } catch (error) {\n      TOAST_CONFIG.error('Error adding product');\n    }\n  };\n  const updateProduct = async id => {\n    if (!validateForm()) return;\n    try {\n      const product = {\n        name,\n        quantity\n      };\n      await axios.put(API_ENDPOINTS.updateProduct(id), product);\n      fetchProducts();\n      resetForm();\n      TOAST_CONFIG.success('Product updated successfully');\n    } catch (error) {\n      TOAST_CONFIG.error('Error updating product');\n    }\n  };\n  const increaseQuantity = async id => {\n    try {\n      await axios.patch(API_ENDPOINTS.increaseQuantity(id));\n      fetchProducts();\n      TOAST_CONFIG.success('Quantity increased successfully');\n    } catch (error) {\n      // console.error('Error increasing quantity:', error);\n      TOAST_CONFIG.error('Error increasing quantity');\n    }\n  };\n  const decreaseQuantity = async id => {\n    // Find the product to check its quantity\n    const product = products.find(p => p._id === id);\n    if (product.quantity > 0) {\n      try {\n        await axios.patch(API_ENDPOINTS.decreaseQuantity(id));\n        fetchProducts();\n        TOAST_CONFIG.success('Quantity decreased successfully');\n      } catch (error) {\n        TOAST_CONFIG.error('Error decreasing quantity');\n      }\n    } else {\n      TOAST_CONFIG.error('Cannot decrease quantity, product quantity is already zero');\n    }\n  };\n  const deleteProduct = async id => {\n    try {\n      await axios.delete(API_ENDPOINTS.deleteProduct(id));\n      setProducts(products.filter(product => product._id !== id));\n      TOAST_CONFIG.success('Product deleted successfully');\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      TOAST_CONFIG.error('Error deleting product');\n    }\n  };\n  const editProduct = product => {\n    setName(product.name);\n    setQuantity(product.quantity);\n    setEditingProductId(product._id);\n  };\n  const resetForm = () => {\n    setName(INITIAL_STATE.name);\n    setQuantity(INITIAL_STATE.quantity);\n    setEditingProductId(INITIAL_STATE.editingProductId);\n    setErrors(INITIAL_STATE.errors);\n  };\n  const handleSave = () => {\n    if (editingProductId) {\n      updateProduct(editingProductId);\n    } else {\n      addProduct();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Inventory Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductForm, {\n      name: name,\n      quantity: quantity,\n      errors: errors,\n      setName: setName,\n      setQuantity: setQuantity,\n      handleSave: handleSave,\n      resetForm: resetForm,\n      fetchProducts: fetchProducts,\n      editingProductId: editingProductId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products,\n      increaseQuantity: increaseQuantity,\n      decreaseQuantity: decreaseQuantity,\n      editProduct: editProduct,\n      deleteProduct: deleteProduct,\n      sendNotification: sendNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n};\n_s(Inventory, \"n8Opbt6kWCCwwGmtkQQ1A56ZNZU=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","axios","ToastContainer","TOAST_CONFIG","INITIAL_STATE","API_ENDPOINTS","VALIDATION_ERRORS","ProductForm","ProductList","jsxDEV","_jsxDEV","Inventory","_s","products","setProducts","name","setName","quantity","setQuantity","editingProductId","setEditingProductId","errors","setErrors","fetchProducts","res","get","data","error","sendNotification","productId","post","success","message","validateForm","trim","length","Object","keys","addProduct","product","resetForm","updateProduct","id","put","increaseQuantity","patch","decreaseQuantity","find","p","_id","deleteProduct","delete","filter","console","editProduct","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CTD-LABS-App/frontend/src/components/Inventory.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { ToastContainer } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import '../assets/styles/myStyles.css';\r\n// import { TOAST_CONFIG, INITIAL_STATE, API_ENDPOINTS, VALIDATION_ERRORS } from '../utils/constants';\r\n// import ProductForm from './ProductForm';\r\n// import ProductList from './ProductList';\r\n\r\n// const Inventory = () => {\r\n//   const [products, setProducts] = useState(INITIAL_STATE.products);\r\n//   const [name, setName] = useState(INITIAL_STATE.name);\r\n//   const [quantity, setQuantity] = useState(INITIAL_STATE.quantity);\r\n//   const [editingProductId, setEditingProductId] = useState(INITIAL_STATE.editingProductId);\r\n//   const [errors, setErrors] = useState(INITIAL_STATE.errors);\r\n\r\n//   useEffect(() => {// useEffect to fetch products when the component mounts\r\n//     fetchProducts();\r\n//   }, []);\r\n\r\n//   const fetchProducts = async () => {// fetch products from the API endpoint\r\n//     try {\r\n//       const res = await axios.get(API_ENDPOINTS.fetchProducts);\r\n//       setProducts(res.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching products:', error);\r\n//       TOAST_CONFIG.error('Error fetching products');\r\n//     }\r\n//   };\r\n\r\n//   const sendNotification = async (productId) => {// send notification email using the API endpoint\r\n//     try {\r\n//       const res = await axios.post(API_ENDPOINTS.sendNotification(productId));\r\n//       TOAST_CONFIG.success(res.data.message);\r\n//     } catch (error) {\r\n//       console.error('Error sending notification email:', error);\r\n//       TOAST_CONFIG.error('Error sending notification email');\r\n//     }\r\n//   };\r\n\r\n//   const validateForm = () => {// validate form inputs \r\n//     const errors = {};\r\n//     if (name.trim().length < 3) {\r\n//       errors.name = VALIDATION_ERRORS.name;\r\n//       TOAST_CONFIG.error(VALIDATION_ERRORS.name);\r\n//     }\r\n//     if (quantity < 0) {\r\n//       errors.quantity = VALIDATION_ERRORS.quantity;\r\n//       TOAST_CONFIG.error(VALIDATION_ERRORS.quantity);\r\n//     }\r\n//     setErrors(errors);\r\n//     return Object.keys(errors).length === 0;\r\n//   };\r\n\r\n//   const addProduct = async () => {// add product to the API endpoint\r\n//     if (!validateForm()) return;\r\n\r\n//     try {\r\n//       const product = { name, quantity };\r\n//       const res = await axios.post(API_ENDPOINTS.addProduct, product);\r\n//       setProducts([...products, res.data]);\r\n//       resetForm();\r\n//       TOAST_CONFIG.success('Product added successfully');\r\n//     } catch (error) {\r\n//       console.error('Error adding product:', error);\r\n//       TOAST_CONFIG.error('Error adding product');\r\n//     }\r\n//   };\r\n\r\n//   const updateProduct = async (id) => {// update product in the API endpoint\r\n//     if (!validateForm()) return;\r\n\r\n//     try {\r\n//       const product = { name, quantity };\r\n//       await axios.put(API_ENDPOINTS.updateProduct(id), product);\r\n//       fetchProducts();\r\n//       resetForm();\r\n//       TOAST_CONFIG.success('Product updated successfully');\r\n//     } catch (error) {\r\n//       console.error('Error updating product:', error);\r\n//       TOAST_CONFIG.error('Error updating product');\r\n//     }\r\n//   };\r\n\r\n//   const increaseQuantity = async (id) => {// increase product quantity in the API endpoint\r\n//     try {\r\n//       await axios.patch(API_ENDPOINTS.increaseQuantity(id));\r\n//       fetchProducts();\r\n//       TOAST_CONFIG.success('Quantity increased successfully');\r\n//     } catch (error) {\r\n//       console.error('Error increasing quantity:', error);\r\n//       TOAST_CONFIG.error('Error increasing quantity');\r\n//     }\r\n//   };\r\n\r\n//   const decreaseQuantity = async (id) => {// decrease product quantity in the API endpoint\r\n//     try {\r\n//       await axios.patch(API_ENDPOINTS.decreaseQuantity(id));\r\n//       fetchProducts();\r\n//       TOAST_CONFIG.success('Quantity decreased successfully');\r\n//     } catch (error) {\r\n//       console.error('Error decreasing quantity:', error);\r\n//       TOAST_CONFIG.error('Error decreasing quantity');\r\n//     }\r\n//   };\r\n\r\n//   const deleteProduct = async (id) => {// delete product from the API endpoint\r\n//     try {\r\n//       await axios.delete(API_ENDPOINTS.deleteProduct(id));\r\n//       setProducts(products.filter((product) => product._id !== id));\r\n//       TOAST_CONFIG.success('Product deleted successfully');\r\n//     } catch (error) {\r\n//       console.error('Error deleting product:', error);\r\n//       TOAST_CONFIG.error('Error deleting product');\r\n//     }\r\n//   };\r\n\r\n//   const editProduct = (product) => {// edit product in the form\r\n//     setName(product.name);\r\n//     setQuantity(product.quantity);\r\n//     setEditingProductId(product._id);\r\n//   };\r\n\r\n//   const resetForm = () => {// reset form inputs\r\n//     setName(INITIAL_STATE.name);\r\n//     setQuantity(INITIAL_STATE.quantity);\r\n//     setEditingProductId(INITIAL_STATE.editingProductId);\r\n//     setErrors(INITIAL_STATE.errors);\r\n//   };\r\n\r\n//   const handleSave = () => {// handle form submission\r\n//     if (editingProductId) {\r\n//       updateProduct(editingProductId);\r\n//     } else {\r\n//       addProduct();\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <ToastContainer />\r\n//       <h1 className=\"header\">Inventory Management System</h1>\r\n//       <ProductForm\r\n//         name={name}\r\n//         quantity={quantity}\r\n//         errors={errors}\r\n//         setName={setName}\r\n//         setQuantity={setQuantity}\r\n//         handleSave={handleSave}\r\n//         resetForm={resetForm}\r\n//         fetchProducts={fetchProducts}\r\n//         editingProductId={editingProductId}\r\n//       />\r\n//       <h2 className=\"header\">Products</h2>\r\n//       <ProductList\r\n//         products={products}\r\n//         increaseQuantity={increaseQuantity}\r\n//         decreaseQuantity={decreaseQuantity}\r\n//         editProduct={editProduct}\r\n//         deleteProduct={deleteProduct}\r\n//         sendNotification={sendNotification}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Inventory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../assets/styles/myStyles.css';\r\nimport { TOAST_CONFIG, INITIAL_STATE, API_ENDPOINTS, VALIDATION_ERRORS } from '../utils/constants';\r\nimport ProductForm from './ProductForm';\r\nimport ProductList from './ProductList';\r\n\r\nconst Inventory = () => {\r\n  const [products, setProducts] = useState(INITIAL_STATE.products);\r\n  const [name, setName] = useState(INITIAL_STATE.name);\r\n  const [quantity, setQuantity] = useState(INITIAL_STATE.quantity);\r\n  const [editingProductId, setEditingProductId] = useState(INITIAL_STATE.editingProductId);\r\n  const [errors, setErrors] = useState(INITIAL_STATE.errors);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(API_ENDPOINTS.fetchProducts);\r\n      setProducts(res.data);\r\n    } catch (error) {\r\n      // console.error('Error fetching products:', error);\r\n      TOAST_CONFIG.error('Error fetching products');\r\n    }\r\n  };\r\n\r\n  const sendNotification = async (productId) => {\r\n    try {\r\n      // Check if the product quantity is zero before sending the notification\r\n      // const product = products.find((p) => p._id === productId);\r\n      const res = await axios.post(API_ENDPOINTS.sendNotification(productId));\r\n      TOAST_CONFIG.success(res.data.message);\r\n  \r\n    } catch (error) {\r\n      // console.error('Error sending notification email:', error);\r\n      TOAST_CONFIG.error('The product quantity is not zero, cannot send notification');\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (name.trim().length < 3) {\r\n      errors.name = VALIDATION_ERRORS.name;\r\n      TOAST_CONFIG.error(VALIDATION_ERRORS.name);\r\n    }\r\n    if (quantity < 0) {\r\n      errors.quantity = VALIDATION_ERRORS.quantity;\r\n      TOAST_CONFIG.error(VALIDATION_ERRORS.quantity);\r\n    }\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const addProduct = async () => {\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      const product = { name, quantity };\r\n      const res = await axios.post(API_ENDPOINTS.addProduct, product);\r\n      setProducts([...products, res.data]);\r\n      resetForm();\r\n      TOAST_CONFIG.success('Product added successfully');\r\n    } catch (error) {\r\n      TOAST_CONFIG.error('Error adding product');\r\n    }\r\n  };\r\n\r\n  const updateProduct = async (id) => {\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      const product = { name, quantity };\r\n      await axios.put(API_ENDPOINTS.updateProduct(id), product);\r\n      fetchProducts();\r\n      resetForm();\r\n      TOAST_CONFIG.success('Product updated successfully');\r\n    } catch (error) {\r\n      TOAST_CONFIG.error('Error updating product');\r\n    }\r\n  };\r\n\r\n  const increaseQuantity = async (id) => {\r\n    try {\r\n      await axios.patch(API_ENDPOINTS.increaseQuantity(id));\r\n      fetchProducts();\r\n      TOAST_CONFIG.success('Quantity increased successfully');\r\n    } catch (error) {\r\n      // console.error('Error increasing quantity:', error);\r\n      TOAST_CONFIG.error('Error increasing quantity');\r\n    }\r\n  };\r\n\r\n  const decreaseQuantity = async (id) => {\r\n    // Find the product to check its quantity\r\n    const product = products.find((p) => p._id === id);\r\n    if (product.quantity > 0) {\r\n      try {\r\n        await axios.patch(API_ENDPOINTS.decreaseQuantity(id));\r\n        fetchProducts();\r\n        TOAST_CONFIG.success('Quantity decreased successfully');\r\n      } catch (error) {\r\n        TOAST_CONFIG.error('Error decreasing quantity');\r\n      }\r\n    } \r\n    else {\r\n      TOAST_CONFIG.error('Cannot decrease quantity, product quantity is already zero');\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(API_ENDPOINTS.deleteProduct(id));\r\n      setProducts(products.filter((product) => product._id !== id));\r\n      TOAST_CONFIG.success('Product deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting product:', error);\r\n      TOAST_CONFIG.error('Error deleting product');\r\n    }\r\n  };\r\n\r\n  const editProduct = (product) => {\r\n    setName(product.name);\r\n    setQuantity(product.quantity);\r\n    setEditingProductId(product._id);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(INITIAL_STATE.name);\r\n    setQuantity(INITIAL_STATE.quantity);\r\n    setEditingProductId(INITIAL_STATE.editingProductId);\r\n    setErrors(INITIAL_STATE.errors);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (editingProductId) {\r\n      updateProduct(editingProductId);\r\n    } else {\r\n      addProduct();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ToastContainer />\r\n      <h1 className=\"header\">Inventory Management System</h1>\r\n      <ProductForm\r\n        name={name}\r\n        quantity={quantity}\r\n        errors={errors}\r\n        setName={setName}\r\n        setQuantity={setQuantity}\r\n        handleSave={handleSave}\r\n        resetForm={resetForm}\r\n        fetchProducts={fetchProducts}\r\n        editingProductId={editingProductId}\r\n      />\r\n      <h2 className=\"header\">Products</h2>\r\n      <ProductList\r\n        products={products}\r\n        increaseQuantity={increaseQuantity}\r\n        decreaseQuantity={decreaseQuantity}\r\n        editProduct={editProduct}\r\n        deleteProduct={deleteProduct}\r\n        sendNotification={sendNotification}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAO,gBAAgB;AAC9C,OAAO,uCAAuC;AAC9C,OAAO,+BAA+B;AACtC,SAASC,YAAY,EAAEC,aAAa,EAAEC,aAAa,EAAEC,iBAAiB,QAAQ,oBAAoB;AAClG,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAACK,aAAa,CAACS,QAAQ,CAAC;EAChE,MAAM,CAACE,IAAI,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}